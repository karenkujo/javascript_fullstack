{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'wn',\n  age: 18\n};\nvar ADD = 'ADD';\n\nfunction conutReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.username\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar allReducer = combineReducers({});\nvar store = createStore(reducer, initialState);\nstore.dispatch({\n  type: ADD\n});\nstore.subscribe(function () {\n  console.log('subscribe', store.getState());\n});\nstore.dispatch({\n  type: ADD\n});\nexport default store;","map":{"version":3,"sources":["D:/javascript_fullstack/react-v16/next/nextjs-github/store/store.js"],"names":["createStore","combineReducers","initialState","count","userInitialState","username","age","ADD","conutReducer","state","action","console","log","type","UPDATE_USERNAME","userReducer","allReducer","store","reducer","dispatch","subscribe","getState"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,IADa;AAEvBC,EAAAA,GAAG,EAAE;AAFkB,CAAzB;AAMA,IAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKN,GAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,aAAOM,KAAP;AAJJ;AAMD;;AAED,IAAMK,eAAe,GAAG,iBAAxB;;AACA,SAASC,WAAT,GAAwD;AAAA,MAAlCN,KAAkC,uEAA1BL,gBAA0B;AAAA,MAARM,MAAQ;;AACtD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKC,eAAL;AACE,+BAAYL,KAAZ;AAAmBJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAApC;;AACF;AACE,aAAOI,KAAP;AAJJ;AAMD;;AAED,IAAMO,UAAU,GAAGf,eAAe,CAAC,EAAD,CAAlC;AAGA,IAAMgB,KAAK,GAAGjB,WAAW,CAACkB,OAAD,EAAUhB,YAAV,CAAzB;AAEAe,KAAK,CAACE,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAEN;AAAP,CAAf;AAEAU,KAAK,CAACG,SAAN,CAAgB,YAAM;AACpBT,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,KAAK,CAACI,QAAN,EAAzB;AACD,CAFD;AAIAJ,KAAK,CAACE,QAAN,CAAe;AAACN,EAAAA,IAAI,EAAEN;AAAP,CAAf;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n  count: 0\r\n}\r\n\r\nconst userInitialState = {\r\n  username: 'wn',\r\n  age: 18\r\n}\r\n\r\n\r\nconst ADD = 'ADD'\r\nfunction conutReducer(state = initialState, action) {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { count: state.count + 1}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\r\nfunction userReducer (state = userInitialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_USERNAME:\r\n      return { ...state, username: action.username}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allReducer = combineReducers({\r\n\r\n})\r\nconst store = createStore(reducer, initialState)\r\n\r\nstore.dispatch({type: ADD})\r\n\r\nstore.subscribe(() => {\r\n  console.log('subscribe', store.getState())\r\n})\r\n\r\nstore.dispatch({type: ADD})\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}