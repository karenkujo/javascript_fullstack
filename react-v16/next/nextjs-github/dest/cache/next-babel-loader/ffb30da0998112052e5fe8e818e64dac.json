{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, combineReducers, applyMiddlewapplyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nconst initialState = {\n  count: 0\n};\nconst userInitialState = {\n  username: 'wn',\n  age: 18\n};\nconst ADD = 'ADD';\n\nfunction conutReducer(state = initialState, action) {\n  console.log(state.count);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.username\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst allReducer = combineReducers({\n  counter: conutReducer,\n  user: userReducer\n});\nconst store = createStore(allReducer, {\n  counter: initialState,\n  user: userInitialState\n}, applyMiddlewapplyMiddleware(ReduxThunk)); // actionCreator\n\nfunction add(num) {\n  return {\n    type: ADD,\n    num\n  };\n}\n\nfunction addAsync(num) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(num);\n    }, 1000);\n  };\n}\n\nstore.dispatch(add(3));\nstore.subscribe(() => {\n  console.log('subscribe', store.getState());\n});\nstore.dispatch(addAsync(5));\nstore.dispatch({\n  type: UPDATE_USERNAME,\n  username: 'zm'\n});\nexport default store;","map":{"version":3,"sources":["D:/javascript_fullstack/react-v16/next/nextjs-github/store/store.js"],"names":["createStore","combineReducers","applyMiddlewapplyMiddleware","ReduxThunk","initialState","count","userInitialState","username","age","ADD","conutReducer","state","action","console","log","type","num","UPDATE_USERNAME","userReducer","allReducer","counter","user","store","add","addAsync","dispatch","setTimeout","subscribe","getState"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,2BAAvC,QAA0E,OAA1E;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE,IADa;AAEvBC,EAAAA,GAAG,EAAE;AAFkB,CAAzB;AAMA,MAAMC,GAAG,GAAG,KAAZ;;AACA,SAASC,YAAT,CAAsBC,KAAK,GAAGP,YAA9B,EAA4CQ,MAA5C,EAAoD;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACN,KAAlB;;AACA,UAAQO,MAAM,CAACG,IAAf;AACE,SAAKN,GAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,IAAgBO,MAAM,CAACI,GAAP,IAAc,CAA9B;AAAT,OAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD;;AAED,MAAMM,eAAe,GAAG,iBAAxB;;AACA,SAASC,WAAT,CAAsBP,KAAK,GAAGL,gBAA9B,EAAgDM,MAAhD,EAAwD;AACtD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKE,eAAL;AACE,+BAAYN,KAAZ;AAAmBJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAApC;;AACF;AACE,aAAOI,KAAP;AAJJ;AAMD;;AAED,MAAMQ,UAAU,GAAGlB,eAAe,CAAC;AACjCmB,EAAAA,OAAO,EAAEV,YADwB;AAEjCW,EAAAA,IAAI,EAAEH;AAF2B,CAAD,CAAlC;AAIA,MAAMI,KAAK,GAAGtB,WAAW,CACvBmB,UADuB,EAEvB;AACAC,EAAAA,OAAO,EAAEhB,YADT;AAEAiB,EAAAA,IAAI,EAAEf;AAFN,CAFuB,EAMvBJ,2BAA2B,CAACC,UAAD,CANJ,CAAzB,C,CASA;;AACA,SAASoB,GAAT,CAAaP,GAAb,EAAkB;AAChB,SAAO;AACLD,IAAAA,IAAI,EAAEN,GADD;AACMO,IAAAA;AADN,GAAP;AAGD;;AAED,SAASQ,QAAT,CAAkBR,GAAlB,EAAuB;AACrB,SAAQS,QAAD,IAAc;AACnBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACT,GAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD;;AAEDM,KAAK,CAACG,QAAN,CAAeF,GAAG,CAAC,CAAD,CAAlB;AAEAD,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBd,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBQ,KAAK,CAACM,QAAN,EAAzB;AACD,CAFD;AAIAN,KAAK,CAACG,QAAN,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AACAF,KAAK,CAACG,QAAN,CAAe;AAAEV,EAAAA,IAAI,EAAEE,eAAR;AAAyBV,EAAAA,QAAQ,EAAE;AAAnC,CAAf;AAEA,eAAee,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddlewapplyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nconst initialState = {\r\n  count: 0\r\n}\r\n\r\nconst userInitialState = {\r\n  username: 'wn',\r\n  age: 18\r\n}\r\n\r\n\r\nconst ADD = 'ADD'\r\nfunction conutReducer(state = initialState, action) {\r\n  console.log(state.count)\r\n  switch (action.type) {\r\n    case ADD:\r\n      return { count: state.count + ( action.num || 1 )}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\r\nfunction userReducer (state = userInitialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_USERNAME:\r\n      return { ...state, username: action.username}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst allReducer = combineReducers({\r\n  counter: conutReducer,\r\n  user: userReducer\r\n})\r\nconst store = createStore(\r\n  allReducer, \r\n  {\r\n  counter: initialState,\r\n  user: userInitialState\r\n  },\r\n  applyMiddlewapplyMiddleware(ReduxThunk)\r\n)\r\n\r\n// actionCreator\r\nfunction add(num) {\r\n  return {\r\n    type: ADD, num\r\n  }\r\n}\r\n\r\nfunction addAsync(num) {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(num)\r\n    }, 1000)\r\n  }\r\n}\r\n\r\nstore.dispatch(add(3))\r\n\r\nstore.subscribe(() => {\r\n  console.log('subscribe', store.getState())\r\n})\r\n\r\nstore.dispatch(addAsync(5))\r\nstore.dispatch({ type: UPDATE_USERNAME, username: 'zm' })\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}